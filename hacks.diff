 gpu/command_buffer/service/gl_utils.cc | 21 ++++++++++++---------
 1 file changed, 12 insertions(+), 9 deletions(-)

diff --git a/gpu/command_buffer/service/gl_utils.cc b/gpu/command_buffer/service/gl_utils.cc
index bbbf8c109f..84ff2f56ac 100644
--- a/gpu/command_buffer/service/gl_utils.cc
+++ b/gpu/command_buffer/service/gl_utils.cc
@@ -257,7 +257,8 @@ void PopulateNumericCapabilities(Capabilities* caps,
     glGetIntegerv(GL_UNIFORM_BUFFER_OFFSET_ALIGNMENT,
                   &caps->uniform_buffer_offset_alignment);
     caps->major_version = 3;
-    if (feature_info->IsES31ForTestingContext()) {
+    
+    //if (feature_info->IsES31ForTestingContext()) {
       glGetIntegerv(GL_MAX_ATOMIC_COUNTER_BUFFER_BINDINGS,
                     &caps->max_atomic_counter_buffer_bindings);
       glGetIntegerv(GL_MAX_SHADER_STORAGE_BUFFER_BINDINGS,
@@ -265,9 +266,9 @@ void PopulateNumericCapabilities(Capabilities* caps,
       glGetIntegerv(GL_SHADER_STORAGE_BUFFER_OFFSET_ALIGNMENT,
                     &caps->shader_storage_buffer_offset_alignment);
       caps->minor_version = 1;
-    } else {
+    /*} else {
       caps->minor_version = 0;
-    }
+    }*/
   }
   if (feature_info->feature_flags().multisampled_render_to_texture ||
       feature_info->feature_flags().chromium_framebuffer_multisample ||
@@ -285,9 +286,10 @@ bool CheckUniqueAndNonNullIds(GLsizei n, const GLuint* client_ids) {
 }
 
 const char* GetServiceVersionString(const FeatureInfo* feature_info) {
-  if (feature_info->IsWebGL2OrES3Context())
-    return "OpenGL ES 3.0 Chromium";
-  else if (feature_info->IsES31ForTestingContext()) {
+  if (feature_info->IsWebGL2OrES3Context()){
+    /*return "OpenGL ES 3.0 Chromium";
+  }
+  else if (feature_info->IsES31ForTestingContext()) {*/
     return "OpenGL ES 3.1 Chromium";
   } else
     return "OpenGL ES 2.0 Chromium";
@@ -295,9 +297,10 @@ const char* GetServiceVersionString(const FeatureInfo* feature_info) {
 
 const char* GetServiceShadingLanguageVersionString(
     const FeatureInfo* feature_info) {
-  if (feature_info->IsWebGL2OrES3Context())
-    return "OpenGL ES GLSL ES 3.0 Chromium";
-  else if (feature_info->IsES31ForTestingContext()) {
+  if (feature_info->IsWebGL2OrES3Context()) {
+/*    return "OpenGL ES GLSL ES 3.0 Chromium";
+  }
+  else if (feature_info->IsES31ForTestingContext()) {*/
     return "OpenGL ES GLSL ES 3.1 Chromium";
   } else
     return "OpenGL ES GLSL ES 1.0 Chromium";
 gpu/command_buffer/service/gles2_cmd_decoder.cc | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/gpu/command_buffer/service/gles2_cmd_decoder.cc b/gpu/command_buffer/service/gles2_cmd_decoder.cc
index c165209555..fb7459b076 100644
--- a/gpu/command_buffer/service/gles2_cmd_decoder.cc
+++ b/gpu/command_buffer/service/gles2_cmd_decoder.cc
@@ -4273,7 +4273,7 @@ Capabilities GLES2DecoderImpl::GetCapabilities() {
                   &caps.uniform_buffer_offset_alignment, 1);
     // TODO(zmo): once we switch to MANGLE, we should query version numbers.
     caps.major_version = 3;
-    caps.minor_version = 0;
+    caps.minor_version = 1;
   }
   if (feature_info_->feature_flags().multisampled_render_to_texture ||
       feature_info_->feature_flags().chromium_framebuffer_multisample ||
 .../gles2_cmd_decoder_passthrough_handlers.cc      | 24 +++++++++++-----------
 1 file changed, 12 insertions(+), 12 deletions(-)

diff --git a/gpu/command_buffer/service/gles2_cmd_decoder_passthrough_handlers.cc b/gpu/command_buffer/service/gles2_cmd_decoder_passthrough_handlers.cc
index cf48939b56..05b4fa3f9e 100644
--- a/gpu/command_buffer/service/gles2_cmd_decoder_passthrough_handlers.cc
+++ b/gpu/command_buffer/service/gles2_cmd_decoder_passthrough_handlers.cc
@@ -127,9 +127,9 @@ error::Error GLES2DecoderPassthroughImpl::HandleDrawArrays(
 error::Error GLES2DecoderPassthroughImpl::HandleDrawArraysIndirect(
     uint32_t immediate_data_size,
     const volatile void* cmd_data) {
-  if (!feature_info_->IsES31ForTestingContext()) {
+/*  if (!feature_info_->IsES31ForTestingContext()) {
     return error::kUnknownCommand;
-  }
+  }*/
   const volatile gles2::cmds::DrawArraysIndirect& c =
       *static_cast<const volatile gles2::cmds::DrawArraysIndirect*>(cmd_data);
   GLenum mode = static_cast<GLenum>(c.mode);
@@ -156,9 +156,9 @@ error::Error GLES2DecoderPassthroughImpl::HandleDrawElements(
 error::Error GLES2DecoderPassthroughImpl::HandleDrawElementsIndirect(
     uint32_t immediate_data_size,
     const volatile void* cmd_data) {
-  if (!feature_info_->IsES31ForTestingContext()) {
+/*  if (!feature_info_->IsES31ForTestingContext()) {
     return error::kUnknownCommand;
-  }
+  }*/
   const volatile gles2::cmds::DrawElementsIndirect& c =
       *static_cast<const volatile gles2::cmds::DrawElementsIndirect*>(cmd_data);
   GLenum mode = static_cast<GLenum>(c.mode);
@@ -516,9 +516,9 @@ error::Error GLES2DecoderPassthroughImpl::HandleGetProgramInfoLog(
 error::Error GLES2DecoderPassthroughImpl::HandleGetProgramResourceiv(
     uint32_t immediate_data_size,
     const volatile void* cmd_data) {
-  if (!feature_info_->IsES31ForTestingContext()) {
+/*  if (!feature_info_->IsES31ForTestingContext()) {
     return error::kUnknownCommand;
-  }
+  }*/
   const volatile gles2::cmds::GetProgramResourceiv& c =
       *static_cast<const volatile gles2::cmds::GetProgramResourceiv*>(cmd_data);
   GLuint program = static_cast<GLuint>(c.program);
@@ -564,9 +564,9 @@ error::Error GLES2DecoderPassthroughImpl::HandleGetProgramResourceiv(
 error::Error GLES2DecoderPassthroughImpl::HandleGetProgramResourceIndex(
     uint32_t immediate_data_size,
     const volatile void* cmd_data) {
-  if (!feature_info_->IsES31ForTestingContext()) {
+/*  if (!feature_info_->IsES31ForTestingContext()) {
     return error::kUnknownCommand;
-  }
+  }*/
   const volatile gles2::cmds::GetProgramResourceIndex& c =
       *static_cast<const volatile gles2::cmds::GetProgramResourceIndex*>(
           cmd_data);
@@ -599,9 +599,9 @@ error::Error GLES2DecoderPassthroughImpl::HandleGetProgramResourceIndex(
 error::Error GLES2DecoderPassthroughImpl::HandleGetProgramResourceLocation(
     uint32_t immediate_data_size,
     const volatile void* cmd_data) {
-  if (!feature_info_->IsES31ForTestingContext()) {
+/*  if (!feature_info_->IsES31ForTestingContext()) {
     return error::kUnknownCommand;
-  }
+  }*/
   const volatile gles2::cmds::GetProgramResourceLocation& c =
       *static_cast<const volatile gles2::cmds::GetProgramResourceLocation*>(
           cmd_data);
@@ -634,9 +634,9 @@ error::Error GLES2DecoderPassthroughImpl::HandleGetProgramResourceLocation(
 error::Error GLES2DecoderPassthroughImpl::HandleGetProgramResourceName(
     uint32_t immediate_data_size,
     const volatile void* cmd_data) {
-  if (!feature_info_->IsES31ForTestingContext()) {
+/*  if (!feature_info_->IsES31ForTestingContext()) {
     return error::kUnknownCommand;
-  }
+  }*/
   const volatile gles2::cmds::GetProgramResourceName& c =
       *static_cast<const volatile gles2::cmds::GetProgramResourceName*>(
           cmd_data);
 ...es2_cmd_decoder_passthrough_handlers_autogen.cc | 26 ++++++++++++----------
 1 file changed, 14 insertions(+), 12 deletions(-)

diff --git a/gpu/command_buffer/service/gles2_cmd_decoder_passthrough_handlers_autogen.cc b/gpu/command_buffer/service/gles2_cmd_decoder_passthrough_handlers_autogen.cc
index d24c1f3738..5561870f01 100644
--- a/gpu/command_buffer/service/gles2_cmd_decoder_passthrough_handlers_autogen.cc
+++ b/gpu/command_buffer/service/gles2_cmd_decoder_passthrough_handlers_autogen.cc
@@ -4014,8 +4014,8 @@ error::Error GLES2DecoderPassthroughImpl::HandleFramebufferParameteri(
 error::Error GLES2DecoderPassthroughImpl::HandleBindImageTexture(
     uint32_t immediate_data_size,
     const volatile void* cmd_data) {
-  if (!feature_info_->IsES31ForTestingContext())
-    return error::kUnknownCommand;
+/*  if (!feature_info_->IsES31ForTestingContext())
+    return error::kUnknownCommand;*/
   const volatile gles2::cmds::BindImageTexture& c =
       *static_cast<const volatile gles2::cmds::BindImageTexture*>(cmd_data);
   GLuint unit = static_cast<GLuint>(c.unit);
@@ -4036,8 +4036,9 @@ error::Error GLES2DecoderPassthroughImpl::HandleBindImageTexture(
 error::Error GLES2DecoderPassthroughImpl::HandleDispatchCompute(
     uint32_t immediate_data_size,
     const volatile void* cmd_data) {
-  if (!feature_info_->IsES31ForTestingContext())
-    return error::kUnknownCommand;
+/*  if (!feature_info_->IsES31ForTestingContext())
+    return error::kUnknownCommand;*/
+    
   const volatile gles2::cmds::DispatchCompute& c =
       *static_cast<const volatile gles2::cmds::DispatchCompute*>(cmd_data);
   GLuint num_groups_x = static_cast<GLuint>(c.num_groups_x);
@@ -4054,8 +4055,9 @@ error::Error GLES2DecoderPassthroughImpl::HandleDispatchCompute(
 error::Error GLES2DecoderPassthroughImpl::HandleDispatchComputeIndirect(
     uint32_t immediate_data_size,
     const volatile void* cmd_data) {
-  if (!feature_info_->IsES31ForTestingContext())
-    return error::kUnknownCommand;
+  /*if (!feature_info_->IsES31ForTestingContext())
+    return error::kUnknownCommand;*/
+    
   const volatile gles2::cmds::DispatchComputeIndirect& c =
       *static_cast<const volatile gles2::cmds::DispatchComputeIndirect*>(
           cmd_data);
@@ -4070,8 +4072,8 @@ error::Error GLES2DecoderPassthroughImpl::HandleDispatchComputeIndirect(
 error::Error GLES2DecoderPassthroughImpl::HandleGetProgramInterfaceiv(
     uint32_t immediate_data_size,
     const volatile void* cmd_data) {
-  if (!feature_info_->IsES31ForTestingContext())
-    return error::kUnknownCommand;
+  /*if (!feature_info_->IsES31ForTestingContext())
+    return error::kUnknownCommand;*/
   const volatile gles2::cmds::GetProgramInterfaceiv& c =
       *static_cast<const volatile gles2::cmds::GetProgramInterfaceiv*>(
           cmd_data);
@@ -4104,8 +4106,8 @@ error::Error GLES2DecoderPassthroughImpl::HandleGetProgramInterfaceiv(
 error::Error GLES2DecoderPassthroughImpl::HandleMemoryBarrierEXT(
     uint32_t immediate_data_size,
     const volatile void* cmd_data) {
-  if (!feature_info_->IsES31ForTestingContext())
-    return error::kUnknownCommand;
+  /*if (!feature_info_->IsES31ForTestingContext())
+    return error::kUnknownCommand;*/
   const volatile gles2::cmds::MemoryBarrierEXT& c =
       *static_cast<const volatile gles2::cmds::MemoryBarrierEXT*>(cmd_data);
   GLbitfield barriers = static_cast<GLbitfield>(c.barriers);
@@ -4119,8 +4121,8 @@ error::Error GLES2DecoderPassthroughImpl::HandleMemoryBarrierEXT(
 error::Error GLES2DecoderPassthroughImpl::HandleMemoryBarrierByRegion(
     uint32_t immediate_data_size,
     const volatile void* cmd_data) {
-  if (!feature_info_->IsES31ForTestingContext())
-    return error::kUnknownCommand;
+  /*if (!feature_info_->IsES31ForTestingContext())
+    return error::kUnknownCommand;*/
   const volatile gles2::cmds::MemoryBarrierByRegion& c =
       *static_cast<const volatile gles2::cmds::MemoryBarrierByRegion*>(
           cmd_data);
 gpu/command_buffer/service/service_utils.cc | 4 ++--
 1 file changed, 2 insertions(+), 2 deletions(-)

diff --git a/gpu/command_buffer/service/service_utils.cc b/gpu/command_buffer/service/service_utils.cc
index 19c5470e1c..a3d19ad20f 100644
--- a/gpu/command_buffer/service/service_utils.cc
+++ b/gpu/command_buffer/service/service_utils.cc
@@ -68,7 +68,7 @@ gl::GLContextAttribs GenerateGLContextAttribs(
     // Request a specific context version instead of always 3.0
     if (IsWebGL2OrES3ContextType(attribs_helper.context_type)) {
       attribs.client_major_es_version = 3;
-      attribs.client_minor_es_version = 0;
+      attribs.client_minor_es_version = 1;
     } else {
       DCHECK(IsWebGL1OrES2ContextType(attribs_helper.context_type));
       attribs.client_major_es_version = 2;
@@ -76,7 +76,7 @@ gl::GLContextAttribs GenerateGLContextAttribs(
     }
   } else {
     attribs.client_major_es_version = 3;
-    attribs.client_minor_es_version = 0;
+    attribs.client_minor_es_version = 1;
   }
 
   if (base::CommandLine::ForCurrentProcess()->HasSwitch(
 .../renderer/bindings/generated_in_modules.gni     | 23 ++++++++++++++++++++++
 1 file changed, 23 insertions(+)

diff --git a/third_party/blink/renderer/bindings/generated_in_modules.gni b/third_party/blink/renderer/bindings/generated_in_modules.gni
index 0f2ce99c74..514192c1a4 100644
--- a/third_party/blink/renderer/bindings/generated_in_modules.gni
+++ b/third_party/blink/renderer/bindings/generated_in_modules.gni
@@ -995,6 +995,29 @@ generated_dictionary_sources_in_modules = [
   "$root_gen_dir/third_party/blink/renderer/bindings/modules/v8/v8_xr_transient_input_hit_test_options_init.h",
   "$root_gen_dir/third_party/blink/renderer/bindings/modules/v8/v8_xr_webgl_layer_init.cc",
   "$root_gen_dir/third_party/blink/renderer/bindings/modules/v8/v8_xr_webgl_layer_init.h",
+
+  "$root_gen_dir/third_party/blink/renderer/bindings/modules/v8/v8_three_context.cc",
+  "$root_gen_dir/third_party/blink/renderer/bindings/modules/v8/v8_three_context.h",  
+  "$root_gen_dir/third_party/blink/renderer/bindings/modules/v8/v8_rgba_image.cc",
+  "$root_gen_dir/third_party/blink/renderer/bindings/modules/v8/v8_rgba_image.h",
+  "$root_gen_dir/third_party/blink/renderer/bindings/modules/v8/v8_image_loader.cc",
+  "$root_gen_dir/third_party/blink/renderer/bindings/modules/v8/v8_image_loader.h",
+  "$root_gen_dir/third_party/blink/renderer/bindings/modules/v8/v8_object_3d.cc",
+  "$root_gen_dir/third_party/blink/renderer/bindings/modules/v8/v8_object_3d.h",
+  "$root_gen_dir/third_party/blink/renderer/bindings/modules/v8/v8_scene.cc",
+  "$root_gen_dir/third_party/blink/renderer/bindings/modules/v8/v8_scene.h",    
+  "$root_gen_dir/third_party/blink/renderer/bindings/modules/v8/v8_camera.cc",
+  "$root_gen_dir/third_party/blink/renderer/bindings/modules/v8/v8_camera.h",
+  "$root_gen_dir/third_party/blink/renderer/bindings/modules/v8/v8_perspective_camera.cc",
+  "$root_gen_dir/third_party/blink/renderer/bindings/modules/v8/v8_perspective_camera.h",
+  "$root_gen_dir/third_party/blink/renderer/bindings/modules/v8/v8_simple_model.cc",
+  "$root_gen_dir/third_party/blink/renderer/bindings/modules/v8/v8_simple_model.h",
+  "$root_gen_dir/third_party/blink/renderer/bindings/modules/v8/v8_background.cc",
+  "$root_gen_dir/third_party/blink/renderer/bindings/modules/v8/v8_background.h",
+  "$root_gen_dir/third_party/blink/renderer/bindings/modules/v8/v8_color_background.cc",
+  "$root_gen_dir/third_party/blink/renderer/bindings/modules/v8/v8_color_background.h",
+  "$root_gen_dir/third_party/blink/renderer/bindings/modules/v8/v8_gl_renderer.cc",
+  "$root_gen_dir/third_party/blink/renderer/bindings/modules/v8/v8_gl_renderer.h",
 ]
 
 generated_enumeration_sources_in_modules = [
 third_party/blink/renderer/bindings/idl_in_modules.gni | 12 ++++++++++++
 1 file changed, 12 insertions(+)

diff --git a/third_party/blink/renderer/bindings/idl_in_modules.gni b/third_party/blink/renderer/bindings/idl_in_modules.gni
index 91f11ffe42..cff7445e17 100644
--- a/third_party/blink/renderer/bindings/idl_in_modules.gni
+++ b/third_party/blink/renderer/bindings/idl_in_modules.gni
@@ -1141,6 +1141,18 @@ static_idl_files_in_modules = get_path_info(
           "//third_party/blink/renderer/modules/xr/xr_webgl_depth_information.idl",
           "//third_party/blink/renderer/modules/xr/xr_webgl_layer.idl",
           "//third_party/blink/renderer/modules/xr/xr_webgl_layer_init.idl",
+          
+          "//third_party/blink/renderer/modules/three_native/three_context.idl",
+          "//third_party/blink/renderer/modules/three_native/rgba_image.idl",
+          "//third_party/blink/renderer/modules/three_native/image_loader.idl",
+          "//third_party/blink/renderer/modules/three_native/object_3d.idl",
+          "//third_party/blink/renderer/modules/three_native/scene.idl",          
+          "//third_party/blink/renderer/modules/three_native/camera.idl",
+          "//third_party/blink/renderer/modules/three_native/perspective_camera.idl",
+          "//third_party/blink/renderer/modules/three_native/simple_model.idl",
+          "//third_party/blink/renderer/modules/three_native/background.idl",
+          "//third_party/blink/renderer/modules/three_native/color_background.idl",
+          "//third_party/blink/renderer/modules/three_native/gl_renderer.idl",
         ],
         "abspath")
 
 third_party/blink/renderer/modules/BUILD.gn | 9 +++++++++
 1 file changed, 9 insertions(+)

diff --git a/third_party/blink/renderer/modules/BUILD.gn b/third_party/blink/renderer/modules/BUILD.gn
index a4baa48f1c..507a643d6e 100644
--- a/third_party/blink/renderer/modules/BUILD.gn
+++ b/third_party/blink/renderer/modules/BUILD.gn
@@ -18,6 +18,14 @@ visibility = [ "//third_party/blink/renderer/*" ]
 
 config("modules_implementation") {
   defines = [ "BLINK_MODULES_IMPLEMENTATION=1" ]
+  
+  include_dirs = [
+    "//third_party/blink/renderer/modules/three_native/internal", 
+    "//third_party/blink/renderer/modules/three_native/thirdparty", 
+    "//third_party/blink/renderer/modules/three_native/thirdparty/bvh/include",
+    "//third_party/blink/renderer/modules/three_native/thirdparty/crc64",
+    "//third_party/blink/renderer/modules/three_native/thirdparty/glm/glm",
+  ]
 }
 
 component("modules") {
@@ -161,6 +169,7 @@ component("modules") {
     "//third_party/blink/renderer/modules/webusb",
     "//third_party/blink/renderer/modules/worklet",
     "//third_party/blink/renderer/modules/xr",
+    "//third_party/blink/renderer/modules/three_native",
   ]
 
   # This uses target_os rather than current_os (which is what is_android is set
